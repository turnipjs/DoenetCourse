// import { v4 as uuid } from 'uuid';
import pkg from 'uuid';
const { v4: uuid } = pkg;

export default class RTMessage {
    /**
     * realtime message object
     * @constructor
     * @param  {String} source
     * @param  {String} sourceType
     * @param  {Date} creatorTimestamp
     */
    constructor(source, sourceType, creatorTimestamp) {
        this.id = uuid(); // UUID
        this.source = source; // Who generated this content
        this.sourceType = sourceType; // user/lamp/RTserver/etc.
        this.creatorTimestamp = creatorTimestamp; // timestamp generated by the program that created the content, insecure and not to be trusted
        this.printableProps = ["id", "souce", "sourceType", "creatorTimestamp"]; //store list of printable props in here
    }

    // adds a property and registers it as printable for toString method
    addPrintableProp(name, content) {
        this[name] = content;
        this.printableProps.push(name);
    }

    toString() {
        let o = {};
        for (let name of this.printableProps) {
            o[name] = this[name];
        }
        return JSON.stringify(o);
    }
}
